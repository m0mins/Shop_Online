 {%if user.profile.image%}
                            <a class="nav-link" href="{% url 'App_Accounts:customer_details' pk=user.pk %}"><img src="/media/{{user.profile.image}}" width="40px" height="40px"class="rounded-circle"></a>
                            {%else%}
                            <a class="nav-link" href="{% url 'App_Accounts:customer_details' pk=user.pk %}"><img src="/media/default.png" width="40px"  height="40px"class="rounded-circle"> </a>
                            {%endif%}
<!-- Your existing HTML structure for decrement and increment buttons -->
<div class="cart-plus-minus">
    <div class="dec qtybutton" data-url="{% url 'decrease' pk=item.pk %}">-</div>
    <div class="inc qtybutton" data-url="{% url 'increase' pk=item.pk %}">+</div>
</div>

<!-- Input field to display and store the quantity -->
<input type="text" class="quantity-input" value="1">

<!-- Include jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- Your modified JavaScript code -->
<script>
    $(".cart-plus-minus").append('<div class="dec qtybutton" data-url="{% url 'decrease' pk=item.pk %}">-</div><div class="inc qtybutton" data-url="{% url 'increase' pk=item.pk %}">+</div>');

    $(".qtybutton").on("click", function () {
        var $button = $(this);
        var oldValue = $button.parent().find("input").val();
        var url = $button.data("url");

        if ($button.text() == "+") {
            var newVal = parseFloat(oldValue) + 1;
        } else {
            // Don't allow decrementing below zero
            if (oldValue > 0) {
                var newVal = parseFloat(oldValue) - 1;
            } else {
                newVal = 0;
            }
        }

        // Update the input field value
        $button.parent().find("input").val(newVal);

        // Send an AJAX request to the corresponding Django URL
        $.ajax({
            url: url,
            method: 'POST',  // or 'GET' based on your view
            data: {
                // You can include additional data if needed
                'new_value': newVal
            },
            success: function(response) {
                // Handle the success response if needed
                console.log(response);
            },
            error: function(error) {
                // Handle the error if needed
                console.error(error);
            }
        });
    });
</script>
